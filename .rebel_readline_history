1588010113655:(require '[reitit.frontend.easy :as rfe])
1588010130224:(clojure.repl/source rfe/push-state)
1588010175937:(rfe/push-state :home nil nil)
1588014541938:(require '[re-frame.core :as rf])
1588014545374:rf/dispatch-n
1588084372245:[reitit.core :as reitit]
1588084381903:(require '[reitit.core :as reitit])
1588084395322:(clojure.repl/source reitit/router\n                     )
1589120246663:js->clj
1613229819554:(in-ns 'elogger.utils.deps)
1613229826567:unload-deps
1613230137365:(load-file "src/cljs/laconic_cms/utils/deps.cljs")
1613230169584:(in-ns 'elogger.utils.deps)
1613230172856:unload-deps
1613230175235:unload-deps!
1613230241522:(keyword (str "#sweetalert2.js"))
1613230250888:(sel1 (keyword (str "#sweetalert2.js")))
1613745709844:js/navigator
1613745733067:(def gl (.-geolocation js/navigator))
1613745734347:gl
1613745753783:(.getCurrentPosition geolocation #(-> % .-coords .-latitude))
1613745764311:(def geolocation (.-geolocation js/navigator))
1613745766150:(.getCurrentPosition geolocation #(-> % .-coords .-latitude))
1613745782607:(.getCurrentPosition geolocation)
1613745791523:(.getCurrentPosition geolocation nil\n                     \n                     )
1613745819348:(.getCurrentPosition geolocation #(prn %))
1613745827208:a
1613745831934:(.getCurrentPosition geolocation #(prn %))
1613745927534:(.getCurrentPosition geolocation #(-> % .-coords))
1613745948840:(.getCurrentPosition geolocation #(prn (.-coords %)))
1613745972328:(.getCurrentPosition geolocation (fn [pos] (prn 'pos pos)))
1613745995181:(.getCurrentPosition geolocation (fn [pos] (prn (str 'pos " " pos))))
1613746043670:(.getCurrentPosition geolocation (fn [pos] (prn (.-coords pos))))
1613746074719:(.getCurrentPosition geolocation (fn [pos] (prn (-> pos .-coords .-latitude))))
1613746100215:(def lat (.getCurrentPosition geolocation (fn [pos] (-> pos .-coords .-latitude))))
1613746102348:lat
1613746446743:(.getCurrentPosition geolocation (fn [pos] (prn (-> pos .-coords .-latitude))))
1615298346347:Math/pi
1615298553937:js/Math
1615298565281:(PI js/Math)
1615298575057:(aget js/Math PI=\n      )
1615298584713:(aget js/Math PI)
1615298591471:(aget js/Math "\nPI")
1615298601062:(aget js/Math "PI")
1615298649588:(aget js/Math "cos")
1615299012448:js/Math.PI
1615299035626:js/Math.asin
1615299042978:(js/Math.asin 2)
1615299047854:(js/Math.asin 100\n              ))
1615299071762:(js/Math.asin 360)
1615299120631:(aget js/Math "asin"\n      )
1615299131522:((aget js/Math "asin") 360)
1615299189348:(defn distance \n  "Takes two points (lat, lng) and returns the distance in Km between them."\n  [[lat1 lng1] [lat2 lng2]]\n  (let [p (/ (oops/oget js/Math "PI") 180)\n        c (oops/oget js/Math "cos")\n        a (-> (- 0.5 (/ (c (* (- lat2 lat1) p)) 2))\n              (+ (* (c (* lat1 p))\n                    (c (* lat2 p))))\n              (* (/ (- 1 (c (* (- lng2 lng1) p))) 2)))]\n    ;; 2 * R; R = 6371 Km\n    (* 12742 (js/Math.asin (js/Math.sqrt a)))))
